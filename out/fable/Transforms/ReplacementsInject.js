"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fableCoreModules = void 0;

var _Types = require("../fable-core.2.0.3/Types");

var _Util = require("../fable-core.2.0.3/Util");

var _Map = require("../fable-core.2.0.3/Map");

const fableCoreModules = (0, _Map.ofSeq)([["Seq", (0, _Map.ofSeq)([["maxBy", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 1], (0, _Types.L)())], ["max", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["minBy", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 1], (0, _Types.L)())], ["min", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["sumBy", (0, _Types.L)(["Fable.Core.IGenericAdder`1", 1], (0, _Types.L)())], ["sum", (0, _Types.L)(["Fable.Core.IGenericAdder`1", 0], (0, _Types.L)())], ["averageBy", (0, _Types.L)(["Fable.Core.IGenericAverager`1", 1], (0, _Types.L)())], ["average", (0, _Types.L)(["Fable.Core.IGenericAverager`1", 0], (0, _Types.L)())]], {
  Compare: _Util.comparePrimitives
})], ["Array", (0, _Map.ofSeq)([["append", (0, _Types.L)(["Array.IArrayCons`1", 0], (0, _Types.L)())], ["mapIndexed", (0, _Types.L)(["Array.IArrayCons`1", 1], (0, _Types.L)())], ["map", (0, _Types.L)(["Array.IArrayCons`1", 1], (0, _Types.L)())], ["mapIndexed2", (0, _Types.L)(["Array.IArrayCons`1", 2], (0, _Types.L)())], ["map2", (0, _Types.L)(["Array.IArrayCons`1", 2], (0, _Types.L)())], ["mapIndexed3", (0, _Types.L)(["Array.IArrayCons`1", 3], (0, _Types.L)())], ["map3", (0, _Types.L)(["Array.IArrayCons`1", 2], (0, _Types.L)())], ["mapFold", (0, _Types.L)(["Array.IArrayCons`1", 2], (0, _Types.L)())], ["mapFoldBack", (0, _Types.L)(["Array.IArrayCons`1", 2], (0, _Types.L)())], ["concat", (0, _Types.L)(["Array.IArrayCons`1", 0], (0, _Types.L)())], ["collect", (0, _Types.L)(["Array.IArrayCons`1", 1], (0, _Types.L)())], ["countBy", (0, _Types.L)(["System.Collections.Generic.IEqualityComparer`1", 1], (0, _Types.L)())], ["distinctBy", (0, _Types.L)(["System.Collections.Generic.IEqualityComparer`1", 1], (0, _Types.L)())], ["distinct", (0, _Types.L)(["System.Collections.Generic.IEqualityComparer`1", 0], (0, _Types.L)())], ["contains", (0, _Types.L)(["System.Collections.Generic.IEqualityComparer`1", 0], (0, _Types.L)())], ["except", (0, _Types.L)(["System.Collections.Generic.IEqualityComparer`1", 0], (0, _Types.L)())], ["groupBy", (0, _Types.L)(["Array.IArrayCons`1", 0], (0, _Types.L)(["System.Collections.Generic.IEqualityComparer`1", 1], (0, _Types.L)()))], ["singleton", (0, _Types.L)(["Array.IArrayCons`1", 0], (0, _Types.L)())], ["initialize", (0, _Types.L)(["Array.IArrayCons`1", 0], (0, _Types.L)())], ["replicate", (0, _Types.L)(["Array.IArrayCons`1", 0], (0, _Types.L)())], ["copy", (0, _Types.L)(["Array.IArrayCons`1", 0], (0, _Types.L)())], ["reverse", (0, _Types.L)(["Array.IArrayCons`1", 0], (0, _Types.L)())], ["scan", (0, _Types.L)(["Array.IArrayCons`1", 1], (0, _Types.L)())], ["scanBack", (0, _Types.L)(["Array.IArrayCons`1", 1], (0, _Types.L)())], ["skip", (0, _Types.L)(["Array.IArrayCons`1", 0], (0, _Types.L)())], ["skipWhile", (0, _Types.L)(["Array.IArrayCons`1", 0], (0, _Types.L)())], ["take", (0, _Types.L)(["Array.IArrayCons`1", 0], (0, _Types.L)())], ["takeWhile", (0, _Types.L)(["Array.IArrayCons`1", 0], (0, _Types.L)())], ["partition", (0, _Types.L)(["Array.IArrayCons`1", 0], (0, _Types.L)())], ["choose", (0, _Types.L)(["Array.IArrayCons`1", 0], (0, _Types.L)())], ["sortInPlaceBy", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 1], (0, _Types.L)())], ["sortInPlace", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["sort", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["sortBy", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 1], (0, _Types.L)())], ["sortDescending", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["sortByDescending", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 1], (0, _Types.L)())], ["sum", (0, _Types.L)(["Fable.Core.IGenericAdder`1", 0], (0, _Types.L)())], ["sumBy", (0, _Types.L)(["Fable.Core.IGenericAdder`1", 1], (0, _Types.L)())], ["maxBy", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 1], (0, _Types.L)())], ["max", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["minBy", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 1], (0, _Types.L)())], ["min", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["average", (0, _Types.L)(["Fable.Core.IGenericAverager`1", 0], (0, _Types.L)())], ["averageBy", (0, _Types.L)(["Fable.Core.IGenericAverager`1", 1], (0, _Types.L)())], ["ofSeq", (0, _Types.L)(["Array.IArrayCons`1", 0], (0, _Types.L)())], ["ofList", (0, _Types.L)(["Array.IArrayCons`1", 0], (0, _Types.L)())]], {
  Compare: _Util.comparePrimitives
})], ["List", (0, _Map.ofSeq)([["contains", (0, _Types.L)(["System.Collections.Generic.IEqualityComparer`1", 0], (0, _Types.L)())], ["except", (0, _Types.L)(["System.Collections.Generic.IEqualityComparer`1", 0], (0, _Types.L)())], ["sort", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["sortBy", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 1], (0, _Types.L)())], ["sortDescending", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["sortByDescending", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 1], (0, _Types.L)())], ["sum", (0, _Types.L)(["Fable.Core.IGenericAdder`1", 0], (0, _Types.L)())], ["sumBy", (0, _Types.L)(["Fable.Core.IGenericAdder`1", 1], (0, _Types.L)())], ["maxBy", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 1], (0, _Types.L)())], ["max", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["minBy", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 1], (0, _Types.L)())], ["min", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["average", (0, _Types.L)(["Fable.Core.IGenericAverager`1", 0], (0, _Types.L)())], ["averageBy", (0, _Types.L)(["Fable.Core.IGenericAverager`1", 1], (0, _Types.L)())], ["distinctBy", (0, _Types.L)(["System.Collections.Generic.IEqualityComparer`1", 1], (0, _Types.L)())], ["distinct", (0, _Types.L)(["System.Collections.Generic.IEqualityComparer`1", 0], (0, _Types.L)())], ["groupBy", (0, _Types.L)(["System.Collections.Generic.IEqualityComparer`1", 1], (0, _Types.L)())], ["countBy", (0, _Types.L)(["System.Collections.Generic.IEqualityComparer`1", 1], (0, _Types.L)())]], {
  Compare: _Util.comparePrimitives
})], ["Set", (0, _Map.ofSeq)([["FSharpSet$$Map$$38806891", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 1], (0, _Types.L)())], ["singleton", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["unionMany", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["empty", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["map", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 1], (0, _Types.L)())], ["ofList", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["ofArray", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["toArray", (0, _Types.L)(["Array.IArrayCons`1", 0], (0, _Types.L)())], ["ofSeq", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["createMutable", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["distinct", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["distinctBy", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 1], (0, _Types.L)())], ["intersectWith", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["isSubsetOf", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["isSupersetOf", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["isProperSubsetOf", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["isProperSupersetOf", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())]], {
  Compare: _Util.comparePrimitives
})], ["Map", (0, _Map.ofSeq)([["ofList", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["ofSeq", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["ofArray", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["empty", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["createMutable", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 0], (0, _Types.L)())], ["groupBy", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 1], (0, _Types.L)())], ["countBy", (0, _Types.L)(["System.Collections.Generic.IComparer`1", 1], (0, _Types.L)())]], {
  Compare: _Util.comparePrimitives
})]], {
  Compare: _Util.comparePrimitives
});
exports.fableCoreModules = fableCoreModules;
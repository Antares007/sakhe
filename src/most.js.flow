// @flow
import type {Stream} from '@most/types'
import type {PutRay as InnerPutRay, Pith as InnerPith} from './a'

export interface PutRay<A> extends InnerPutRay<Stream<A>> {}

export interface Pith<A> extends InnerPith<Stream<A>> {}

export interface Bark<A, B> {(pith: Pith<A> | Stream<Pith<A>>): Stream<B>}

declare export default function tree<A, B>(
  deltac: (as: Stream<A>[]) => Stream<B>
): Bark<A, B>
